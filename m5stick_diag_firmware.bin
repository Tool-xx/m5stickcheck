import gc, machine, esp32
from machine import Pin, I2C, Timer
import time
import axp202c  # Важно для управления питанием
import st7789   # Родная библиотека дисплея

# Инициализация питания
pm = axp202c.PMU()
pm.enablePower(axp202c.AXP202_LDO2)  # Включаем подсветку

# Инициализация дисплея (135x240)
tft = st7789.ST7789(
    spi=machine.SPI(2, baudrate=40000000, polarity=1),
    width=135,
    height=240,
    reset=Pin(18, Pin.OUT),
    dc=Pin(15, Pin.OUT),
    cs=Pin(5, Pin.OUT),
    backlight=Pin(12, Pin.OUT)
)
tft.init()
tft.fill(0)  # Черный фон

# Шрифты
import vga1_bold_16x32 as font  # Оптимальный шрифт

def show_stats():
    while True:
        # Получаем данные
        cpu = machine.freq() // 1000000
        free = gc.mem_free()
        total = free + gc.mem_alloc()
        temp = esp32.raw_temperature()
        bat = pm.getBattVoltage() / 1000
        
        # Очищаем и выводим
        tft.fill(0)
        
        # Выводим данные с правильными координатами
        tft.text(font, "CPU: {}MHz".format(cpu), 10, 20, st7789.WHITE)
        tft.text(font, "RAM: {}/{}".format(free, total), 10, 60, st7789.GREEN)
        tft.text(font, "BAT: {:.2f}V".format(bat), 10, 100, st7789.YELLOW)
        tft.text(font, "TEMP: {}F".format(temp), 10, 140, st7789.RED)
        
        time.sleep(2)  # Обновление каждые 2 секунды

# Запуск
show_stats()
